cmake_minimum_required(VERSION 3.23)

if(NOT TARGET sirius::sirius_cxx)
  # Find bundled modules first
  set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/modules" ${CMAKE_MODULE_PATH})

  # store CXX compiler id. Used in MKL package.
  set(SIRIUS_CXX_COMPILER_ID @CMAKE_CXX_COMPILER_ID@)
  if(NOT ${CMAKE_CXX_COMPILER_ID})
    set(CMAKE_CXX_COMPILER_ID ${SIRIUS_CXX_COMPILER_ID})
  endif()

  # if not relocatable
  if (NOT @CMAKE_SKIP_INSTALL_RPATH@)
    set(MPI_ROOT @MPI_ROOT@)
    set(ENV{SPG_DIR} @SIRIUS_SPG_DIR@)
    set(ENV{LIBXCROOT} @SIRIUS_LIBXCROOT@)
    set(ENV{GSL_ROOT_DIR} @SIRIUS_GSL_ROOT_DIR@)
    set(ENV{MKLROOT} @SIRIUS_MKLROOT@)
    set(ENV{MAGMAROOT} @SIRIUS_MAGMAROOT@)
    set(ENV{ELPAROOT} @SIRIUS_ELPAROOT@)
    set(SpFFT_DIR @SpFFT_DIR@)
    # TODO: CUDA, ROCM, mpi4py ?
  endif()

  # pass REQUIRED or QUIET depending on top Config call
  if (sirius_cxx_FIND_REQUIRED)
    set(mode REQUIRED)
  else()
    set(mode QUIET)
  endif()

  find_dependency(MPI ${mode} COMPONENTS CXX)
  find_dependency(GSL ${mode})
  find_dependency(LibXC 3.0.0 ${mode})
  find_dependency(LibSPG ${mode})
  find_dependency(HDF5 ${mode} C)
  include("${CMAKE_CURRENT_LIST_DIR}/hdf5_target.cmake")
  find_dependency(SpFFT 0.9.6 CONFIG ${mode})
  find_dependency(SPLA 1.1.0 CONFIG ${mode})
  find_dependency(costa CONFIG ${mode})

  if(@SIRIUS_USE_OPENMP@)
    find_dependency(OpenMP ${mode})
  endif()

  if(@SIRIUS_USE_MKL@)
    set(MKL_INTERFACE "@MKL_INTERFACE@")
    set(MKL_THREADING "@MKL_THREADING@")
    set(MKL_MPI "@MKL_MPI@")
    find_dependency(MKL CONFIG)
  elseif(@SIRIUS_USE_CRAY_LIBSCI@)
    find_dependency(CRAY_LIBSCI ${mode})
  else()
    find_dependency(LAPACK ${mode})
    if(@SIRIUS_USE_SCALAPACK@)
      find_dependency(SCALAPACK ${mode}) # just sets scalapack_DIR
    endif()
  endif()

  if(@SIRIUS_USE_ELPA@)
    find_dependency(Elpa ${mode})
  endif()

  if(@SIRIUS_USE_DLAF@)
    find_dependency(DLAF ${mode})
  endif()

  if(@SIRIUS_USE_MAGMA@)
    find_dependency(MAGMA ${mode})
  endif()

  if(@SIRIUS_USE_VDWXC@)
    find_dependency(LibVDWXC 0.3.0 ${mode})
  endif()

  if(@SIRIUS_USE_CUDA@)
    # TODO: propagate the passed `sm` flag
    find_dependency(CUDA ${mode})
    include("${CMAKE_CURRENT_LIST_DIR}/cudalibs_target.cmake")
  endif()

  if(@SIRIUS_USE_ROCM@)
    find_dependency(hip CONFIG ${mode})
    find_dependency(rocblas CONFIG ${mode})
    find_dependency(rocsolver CONFIG ${mode})
  endif()

  if(@SIRIUS_USE_MEMORY_POOL@)
    find_dependency(umpire ${mode})
  endif()

  if(@SIRIUS_USE_PUGIXML@)
    find_dependency(pugixml ${mode})
  endif()

  # Clean-up module path.
  list(REMOVE_ITEM CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/modules")

  # Include SIRIUS target
  include("${CMAKE_CURRENT_LIST_DIR}/sirius_cxxTargets.cmake")
endif()
